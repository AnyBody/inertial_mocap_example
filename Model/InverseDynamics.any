Main = 
{  
  AnyOperationMacro InverseDynamicAnalysisSequence = 
  {  
    MacroStr =
    ({
      "classoperation Main.Studies.ParameterIdentification " + " " + strquote("Load design") + " --file=" + strformat("\x22") + "../Input/" + Main.ModelSetup.BVHFileData.NameOfFile +"-"+"OptimizedParameters.txt" + strformat("\x22"), 
      "classoperation Main" + strformat("\x22")+ "Update Values" + strformat("\x22"),
      "operation Main.Studies.InverseDynamicStudy.InitialConditions",
      "run",
      "operation Main.HumanModel.Calibration.CalibrationSequence",
      "run",
      "operation Main.Studies.InverseDynamicStudy.InverseDynamics",
      "run"   
    });
    
  };
  
  //This study is used for running the inverse dynamic analysis of the optimized motion
  //***********************************************************************************
  HumanModel=
  {
    AnyFolder &Mannequin=Main.Studies.InverseDynamicStudy.Mannequin;
    #if WithArms
    #include  "BodyPartsSetup.any"
    #else
    #include  "BodyPartsSetupNoArms.any"
    #endif
  };
  
  #include "HumanModel.any"
};


AnyBodyStudy InverseDynamicStudy = 
{
  
  //AnyFolder &ParameterIdentification=Main.ModelSetup.ParameterIdentification;
  
  //AnyFolder &BVHData=..ModelSetup.BVHFileData ;
  AnyFolder &BodyModel=Main.HumanModel.BodyModel;
  #include "Mannequin.any" 
  
  //Environment around the human
  AnyFolder EnvironmentModel =
  {  
    AnyFolder DrawC3DMarkers = {};
    //Model of the floor and force plates this is where the force plates are defined
    AnyFolder &BodyModelRef=.BodyModel;
    //This environment file makes use of automatic detecteion of which foot are incontact with which plate 
    #include "EnvironmentAutoDetection.any"
    
  };
  
  //Connection between environment and the human    
  AnyFolder ModelEnvironmentConnection = {
    //Drivers for the model
    #include "JointsAndDriversOptimized.any"      
  };
  
  Gravity = Main.ModelSetup.Gravity;
  tStart = Main.ModelSetup.tStart + 2*Kinematics.ApproxVelAccPerturb; 
  tEnd = Main.ModelSetup.tEnd - 2*Kinematics.ApproxVelAccPerturb;
  nStep = floor(Main.ModelSetup.nStep/BVH_DownSamplingRate);
  
  Kinematics.MaxIteration = 50000;
  
  Kinematics.Relax = 1/4;
  
  InverseDynamics.Criterion.UpperBoundOnOff=Off;
};


